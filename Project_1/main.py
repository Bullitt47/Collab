import pygame, base64, io
from pygame.locals import *

# Define some colors
black = (0, 0, 0)
white = (255, 255, 255)
green = (0, 255, 0)
red = (255, 0, 0)
blue = (0, 0, 255)

pygame.init()

# Set the width and height of the screen [width, height]
size = (700, 500)
width = size[0]
height = size[1]
screen = pygame.display.set_mode(size)

pygame.display.set_caption("Our Game")

# background
background = pygame.image.load(io.BytesIO(base64.b64decode(b''))).convert()

# player walking images
walk1 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsBLTj/g+AtAAAAkklEQVQoz7XR0Q0CIQwGYNiAogxg5QY4iQtIbwBiuv8q9ozJ/T2jPkl44Qv5W0oIf1uUQiQ4Rz6FQ0tfgWkHVXqbNzgys/QdVAHIzKq6hcQbTwb3BEWUitIMMMoYhRCIbH8GC3UZVnatogkbW7DsGlIF32LAeMHgPL2DOuCrh8tP6G3xoVXE9ZGfU4exZ/uX+IIH0D8flmCFg6AAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDgtMjdUMDE6NDU6NDArMDA6MDAj1Hx8AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTA4LTI3VDAxOjQ1OjQwKzAwOjAwUonEwAAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII='))).convert()
walk2 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsBLTj/g+AtAAAAm0lEQVQoz62R0Q3DIAxEzQa4CQPUJAMgMkHiDIAi9l+lRqqUsyq1P0X88OS7wzbRvw4ThQjvIJGmAuAhz1A9EK41omTRw4FdRA/QzCJWU5xH7/3WmGI1cN3ACjh1LgBaai3xV8BsF02dh8WOlB7xYyfGDpNFsV0DggUG8voJwNNSBnDdbj9AqJqdKc17Vpzp2IObOgX2axhneoMXSTYf2pnXQ/YAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDgtMjdUMDE6NDU6NDArMDA6MDAj1Hx8AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTA4LTI3VDAxOjQ1OjQwKzAwOjAwUonEwAAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII='))).convert()
walk3 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsBLTj/g+AtAAAAlklEQVQoz62Q2w3DIAxFyQY4jwUuyQCUTkDoACjy/qvUVKqwyVel8nlkn3uxc396Ew1gBlk2A0siA/ZyJq8cBShn7GAFZCYaBzP3nSnjEHB1IAO0MUUF6lbrRj8AkRqHxLYU9rrYS8c2yV6SaioAeqBVH8FDrFFvjCDkw/x2BI6eOfClb7gilGivjEX1+uTcgdfAEX2Vb1YZIETdu3SnAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIwLTA4LTI3VDAxOjQ1OjQwKzAwOjAwI9R8fAAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMC0wOC0yN1QwMTo0NTo0MCswMDowMFKJxMAAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAAAElFTkSuQmCC'))).convert()
walk4 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsBLTj/g+AtAAAAnUlEQVQoz7XRwQ3DIAwFUNgAp2GAuGQAmnSAEjoAirz/KjVVJT5I7a0oB/JkfduJMX875IwleLe8mMvmfgLTACEfW2wwM3M+ACaFkHsQkRZiE68Kp4MmQl4oAhRfiicEIn2+g4Z2Gdq2dpE2u076xLY1JGTcRYGx4L2LSOwKVtxFC24VYoNrGmBOjGBJU+4n9V95f3R/auLFjfC5vQBZ3B+MurLjuwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMC0wOC0yN1QwMTo0NTo0MCswMDowMCPUfHwAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjAtMDgtMjdUMDE6NDU6NDArMDA6MDBSicTAAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAABJRU5ErkJggg=='))).convert()
walk5 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsBLTj/g+AtAAAAnklEQVQoz62PyxHDIAxEoQNkmwIiTAGEVIBJAQyj/luJOGRYfMgpDBc99oOM+dchY6yD2bIzewKw8cPmFTDl7NBy1msBhble4DmYVZOWDBGZHnVEBX0CFZAXSgCab83TT0CkF0OXDK0dLeLwY2+sHSFnxXUVsOBy2wB9Ac8oPaFDgSAIJS7b3oGhVwnSsebgUDPNecTuKBiAUDDA9/0Dl4wgSkRw5tgAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDgtMjdUMDE6NDU6NDArMDA6MDAj1Hx8AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTA4LTI3VDAxOjQ1OjQwKzAwOjAwUonEwAAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII='))).convert()
walk6 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsBLTj/g+AtAAAAkUlEQVQoz62QwQ2DMAxFyQYxNAP0AwNE6QTgDhBV3n+VGnGIHQ6oUnN8st//zjD86QXqwAjybASmQg4svJdoHAzwnht4ADqTnUNE2k7YsCr4NKADlISyATXVmugHoFLn0NgjRaIt9raxh2ThYpoqgLjjMK924wTGqSmzhrhrX/egkxYG+z/dnlNX7ALiBQQ6HV9BTCEjxW/AFQAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMC0wOC0yN1QwMTo0NTo0MCswMDowMCPUfHwAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjAtMDgtMjdUMDE6NDU6NDArMDA6MDBSicTAAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAABJRU5ErkJggg=='))).convert()

# player idle images
idle1 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNDQfVexDWAAAAm0lEQVQoz62R0Q3DIAxEzQY4KQPUSQZAZAJCB0CR918l5ivnRupXET88+e5sQ/Svw0QhwjtIpDkDmOQdigfCpUSUrO1woIq0AzQvEavJzkNVb40pNgPnDayAk3IG0FPviX8CZrto6jwsdqRoxMY+GDtM1objGhAsMI9l0zN/Ac2o2P1wT7BUB2jeq5kyxLbRh1vyY+sG8F8CfNQFEQoh8m0wViwAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDgtMjdUMTM6MTI6NTkrMDA6MDAUPto3AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTA4LTI3VDEzOjEyOjU5KzAwOjAwZWNiiwAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII='))).convert()
idle2 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNDQfVexDWAAAAlElEQVQoz63QzQ3DIAwFYNigDmWAOskACCZI6AAo8v6r5PmEfWilSkWcPvnnQQh/OpH0mrMwpUoOONX6sLD100I8mPtZJjyZUVPcDBGZPejYAdcEFFAWKgZGHiPTD4ChbgbW+i0a7O0gatBqkgLYFgDW3cGiIO5xTSxgRPOv5fX4DiE1RL3Mt8euwVwOJhsU8Iof4QbE4SLqL6Gi3QAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMC0wOC0yN1QxMzoxMjo1OSswMDowMBQ+2jcAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjAtMDgtMjdUMTM6MTI6NTkrMDA6MDBlY2KLAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAABJRU5ErkJggg=='))).convert()
idle3 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNDQfVexDWAAAAnElEQVQoz52R0Q3DIAxEwwa4lAHqhgGQM0FCB0DI+6/S4wuTKvko4oen8/lOLMufh05vx35mD345oQlwEPEWrOWwwO3M5cgDPJmhyZOHqo4ZTCSANgAEFJWyATXWGukWEOFa08kDa/sW9TbYx67tJmsRkxSArQAe76QtW8GWbBcI9l4u34Ct1w+jXChI1uicw085SH6ACQqAj7oCXx8UIuK+8XV8AAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIwLTA4LTI3VDEzOjEyOjU5KzAwOjAwFD7aNwAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMC0wOC0yN1QxMzoxMjo1OSswMDowMGVjYosAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAAAElFTkSuQmCC'))).convert()
idle4 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNDQfVexDWAAAAoUlEQVQoz53R0Q2DMAwE0LBB3DQD9IABUJgA0gFQ5P1XqSMV5QjqTxE/PIXzGZz78xJ/fR7wcoN0EJJngO9BOpjynhaCDcg7wROwMwQPQFVbiL0xGxRPQ1SiykJwxOOIwiBi92+w0EuGja1T1HOxN4+tIVNO16bgAwKMsxbuhdVSkzQYt7rcuZ3BCgYnIVcI3f6lVf/26L56ugEVrX9uOOEDCg8jJeqoZ+UAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDgtMjdUMTM6MTI6NTkrMDA6MDAUPto3AAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTA4LTI3VDEzOjEyOjU5KzAwOjAwZWNiiwAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII='))).convert()

#player jump images
jump1 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNKyZazIOsAAAAm0lEQVQoz62R0Q3DIAxEzQY4KQPUSQZAZAJCB0CR918l5ivnRupXET88+e5sQ/Svw0QhwjtIpDkDmOQdigfCpUSUrO1woIq0AzQvEavJzkNVb40pNgPnDayAk3IG0FPviX8CZrto6jwsdqRoxMY+GDtM1objGhAsMI9l0zN/Ac2o2P1wT7BUB2jeq5kyxLbRh1vyY+sG8F8CfNQFEQoh8m0wViwAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDgtMjdUMTM6NDM6MjkrMDA6MDCAbhRSAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTA4LTI3VDEzOjQzOjI5KzAwOjAw8TOs7gAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII='))).convert()
jump2 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNKyZazIOsAAAAmklEQVQoz72Q0Q3DIAxEYQNfUwaIkw4Q0S6QkAFQ5P1XqV0pwkRqP4v44QnfOwjhfwsUItw58hiGTD8B4wLmsuXFgZW5bA7cmfWOAzdmEWkhOvFQcJCTCJJgcaCmWhM8AHR/BxraZajWLEK+2O61FjKX3DfVmQbAn+oH2gC/DJyPUTDtF/A0bfszDMUyWlOrqlrqtMg9GOPZ6w1PVSHjRluFUgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMC0wOC0yN1QxMzo0MzoyOSswMDowMIBuFFIAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjAtMDgtMjdUMTM6NDM6MjkrMDA6MDDxM6zuAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAABJRU5ErkJggg=='))).convert()
jump3 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNKyZazIOsAAAAmUlEQVQoz72R0Q3DIAxE8QZcUwaoVQag3iBJB0AV+69SO1KEHam/RXw9+XzHkdLfDiElZAdunElaAI8rYCziNMTPfQtgZd43p7kz60wLO8YYU6OKquAzgQ6gDDQHeum9wANA72+gS8MOtTWXkX2wt7MlwIJKOyvRnGwaORs4gCX1oHpAWF4G+qyV1hpcj9ddgdo6YCVLBPMbvvjLIj800WRHAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIwLTA4LTI3VDEzOjQzOjI5KzAwOjAwgG4UUgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMC0wOC0yN1QxMzo0MzoyOSswMDowMPEzrO4AAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAAAElFTkSuQmCC'))).convert()
jump4 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNKyZazIOsAAAAmUlEQVQoz5WR2w3DIAxFYYM4CQP00gwQkQkIHQBV3n+VYrUSdiM1KX8cmfswzl06RM6TunuApkQG3MueBg2Asq99ZM4yo8AIMHN/4zOWBp6D0mAKTKsCNdQa6A/QRI1GsxUX7lFn4KFt32WSSipl9ICAxYARsamacpG/wGbb4gBi/g3ctImtXnuRpDYYpRNw87rbEchv08fkBTi/JRulK/TVAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIwLTA4LTI3VDEzOjQzOjI5KzAwOjAwgG4UUgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMC0wOC0yN1QxMzo0MzoyOSswMDowMPEzrO4AAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAAAElFTkSuQmCC'))).convert()
jump5 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNKyZazIOsAAAAoUlEQVQoz42R0Q3DIAxEYQMcygBxyACITJDQAVDl/Vep+cqZSlEtvp58d7ZxToucLc8UPBnAa6zBAI61QMvCuV2m5WRuF7S8VJNbQQmLyK1Rxa7gEyBFKAkVAD31nugREOlDU+OhsSNFAg72xthhkhtuN9bFhjH6Pik2dcUQPsxyC2/nAOUGBxvgYxumNM9hz071B+A3eF69AU5PQfMH/19fFYoiW3ycEs4AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDgtMjdUMTM6NDM6MjkrMDA6MDCAbhRSAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTA4LTI3VDEzOjQzOjI5KzAwOjAw8TOs7gAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII='))).convert()
jump6 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNKyZazIOsAAAAp0lEQVQoz42R3Q3DIAyEYQOuNAPESQZAZIKEDoAi779KzUtzVqWqSDzwYd/5J4S/DmCX3lEkxZocmHMtFPIQydWHrO104BBpJ+U8RSymOA1VvXMsYzNwJbJVTIpCoE+9T/gJgA6wqNMw2+GiiQt7se0QWRu3a0A4AFb6plcB/S+m+pnIALt6sBwMAvI+2r8rDbENUT92q8MD1C/Ae4kyRwfGcsHL5fMG5/YjbM2wqSoAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDgtMjdUMTM6NDM6MjkrMDA6MDCAbhRSAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTA4LTI3VDEzOjQzOjI5KzAwOjAw8TOs7gAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII='))).convert()
jump7 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNKyZazIOsAAAAmElEQVQoz7WRwQ3DIAxFYQP/pgxQqwxA2SBJB0CV91+lJlKaH6QeeijiwhP2+4YQ/rYgIYLOUW9hqvIbUAzgvi61EJhV14XAVdXvELiomtnRxCuyg5eQxJAMhUBLrSUwAHx/B9701MO13WLCwZ6kjZh60Fogn5zaa+o+3gZ6UgaZgfd4dNAgR5B8sm7TjcC1wyPX4RvirngDyfkimkKUQbUAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDgtMjdUMTM6NDM6MjkrMDA6MDCAbhRSAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTA4LTI3VDEzOjQzOjI5KzAwOjAw8TOs7gAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII='))).convert()
jump8 = pygame.image.load(io.BytesIO(base64.b64decode(b'iVBORw0KGgoAAAANSUhEUgAAACAAAAAgBAMAAACBVGfHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAFVBMVEUAAAAEGT/0ifZ4C/fYQPv8/v7///+l2unaAAAAAXRSTlMAQObYZgAAAAFiS0dEBmFmuH0AAAAHdElNRQfkCBsNKyZazIOsAAAAmElEQVQoz72R0Q2DMAxE8Qa4NAP0gAGiMAGkA0TI+69S56PKBaR+NsrX0/l8tofhb09VRUcCD2BKsQNLPhJJZAfyQZIn4JrYeZhZq/GK1cHZgAs0mEYCJZQS9CdQ9c+mnYe3rV1s5GBvbltNlpz6pLgI3ORkT8wrz+Jgq8PFBub9ArYeyJSrKa3Zs3sO3img6Qb4DIKXfMEH1/ch/1iqgeIAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjAtMDgtMjdUMTM6NDM6MjkrMDA6MDCAbhRSAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIwLTA4LTI3VDEzOjQzOjI5KzAwOjAw8TOs7gAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII='))).convert()

# Loop until the user clicks the close button.
done = False

# Used to manage how fast the screen updates
clock = pygame.time.Clock()
all_sprites = pygame.sprite.Group()

# Player
(x, y) = (width/4, height/1.5) # start player in left bottom 3rd of the screen
speed = 2
diag = 1
up = False
down = False
left = False
right = False
walk = 0
walk_count = 0
idle = 1
idle_count = 0
last_dir = "right"
jump = 0
jump_count = 0

class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = walk1
        self.rect = self.image.get_rect()
        self.rect.center = (x, y)
    def update(self):
        # left
        if left == True:
            self.rect.x -= speed
        if self.rect.right < 0:
            self.rect.left = width
        # right
        if right == True:
            self.rect.x += speed
        if self.rect.left > width:
            self.rect.right = 0
        # down
        if down == True:
            #self.rect.y += speed
            pass
        if self.rect.top > height:
            #self.rect.bottom = 0
            pass

        # animation right
        if last_dir in "right":
            if walk:
                if 0<=walk_count<5:
                    self.image = walk1
                if 5<walk_count<10:
                    self.image = walk2
                if 10<walk_count<15:
                    self.image = walk3
                if 15<walk_count<20:
                    self.image = walk4
                if 20<walk_count<25:
                    self.image = walk5
                if 25<walk_count<30:
                    self.image = walk6

            if jump:
                if 0<=jump_count<10:
                    self.image = jump1
                    self.rect.y -= speed
                if 10<jump_count<20:
                    self.image = jump2
                    self.rect.y -= speed
                if 20<jump_count<30:
                    self.image = jump3
                    self.rect.y -= speed
                if 30<jump_count<40:
                    self.image = jump4
                    self.rect.y -= speed
                if 40<jump_count<50:
                    self.image = jump5
                    self.rect.y += speed
                if 50<jump_count<60:
                    self.image = jump6
                    self.rect.y += speed
                if 60<jump_count<70:
                    self.image = jump7
                    self.rect.y += speed
                if 70<jump_count<80:
                    self.image = jump8
                    self.rect.y += speed

            if idle:
                if 0<=idle_count<10:
                    self.image = idle1
                if 10<idle_count<20:
                    self.image = idle2
                if 20<idle_count<30:
                    self.image = idle3
                if 30<idle_count<40:
                    self.image = idle4
                if 40<idle_count<50:
                    self.image = idle4
                if 50<idle_count<60:
                    self.image = idle3
                if 60<idle_count<70:
                    self.image = idle2
                if 70<idle_count<80:
                    self.image = idle1
        # animation left
        if last_dir in "left":
            if walk:
                if 0<=walk_count<5:
                    self.image = pygame.transform.flip(walk1, True, False)
                if 5<walk_count<10:
                    self.image = pygame.transform.flip(walk2, True, False)
                if 10<walk_count<15:
                    self.image = pygame.transform.flip(walk3, True, False)
                if 15<walk_count<20:
                    self.image = pygame.transform.flip(walk4, True, False)
                if 20<walk_count<25:
                    self.image = pygame.transform.flip(walk5, True, False)
                if 25<walk_count<30:
                    self.image = pygame.transform.flip(walk6, True, False)

            if jump:
                if 0<=jump_count<10:
                    self.image =  pygame.transform.flip(jump1, True, False)
                    self.rect.y -= speed
                if 10<jump_count<20:
                    self.image =  pygame.transform.flip(jump2, True, False)
                    self.rect.y -= speed
                if 20<jump_count<30:
                    self.image =  pygame.transform.flip(jump3, True, False)
                    self.rect.y -= speed
                if 30<jump_count<40:
                    self.image =  pygame.transform.flip(jump4, True, False)
                    self.rect.y -= speed
                if 40<jump_count<50:
                    self.image =  pygame.transform.flip(jump5, True, False)
                    self.rect.y += speed
                if 50<jump_count<60:
                    self.image =  pygame.transform.flip(jump6, True, False)
                    self.rect.y += speed
                if 60<jump_count<70:
                    self.image =  pygame.transform.flip(jump7, True, False)
                    self.rect.y += speed
                if 70<jump_count<80:
                    self.image =  pygame.transform.flip(jump8, True, False)
                    self.rect.y += speed

            if idle:
                if 0<=idle_count<10:
                    self.image = pygame.transform.flip(idle1, True, False)
                if 10<idle_count<20:
                    self.image = pygame.transform.flip(idle2, True, False)
                if 20<idle_count<30:
                    self.image = pygame.transform.flip(idle3, True, False)
                if 30<idle_count<40:
                    self.image = pygame.transform.flip(idle4, True, False)
                if 40<idle_count<50:
                    self.image = pygame.transform.flip(idle4, True, False)
                if 50<idle_count<60:
                    self.image = pygame.transform.flip(idle3, True, False)
                if 60<idle_count<70:
                    self.image = pygame.transform.flip(idle2, True, False)
                if 70<idle_count<80:
                    self.image = pygame.transform.flip(idle1, True, False)



player = Player()
all_sprites.add(player)

# -------- Main Program Loop -----------
while not done:
    # --- Main event loop
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True

    # reset walk_count when not moving
    if not left and not right:
        walk = 0
        walk_count = 0
        idle = 1
        idle_count +=1
    # reset to Loop walk animation
    if walk_count >= 30:
        walk_count = 0
    # reset to loop idle animation
    if idle_count >= 80:
        idle_count = 0
    #stop jump animation
    if jump_count >= 80:
        jump = 0
        jump_count = 0

    # keypresses
    keys = pygame.key.get_pressed()
    # left
    if keys[K_LEFT]:
        left = True
        walk_count += 1
        idle = 0
        idle_count = 0
        last_dir = "left"
        walk = 1
    elif not keys[K_LEFT]:
        left = False
    # right
    if keys[K_RIGHT]:
        right = True
        walk_count += 1
        idle = 0
        idle_count = 0
        last_dir = "right"
        walk = 1
    elif not keys[K_RIGHT]:
        right = False
    # up
    if keys[K_UP]:
        up = True
        jump = 1
    elif not keys[K_UP]:
        up = False
    # down
    if keys[K_DOWN]:
        down = True
    elif not keys[K_DOWN]:
        down = False
    if jump:
        idle = 0
        idle_count = 0
        walk = 0
        walk_count = 0
        jump_count += 1
    else:
        pass



    # --- Screen-clearing code goes here

    # Here, we clear the screen to white. Don't put other drawing commands
    # above this, or they will be erased with this command.

    # If you want a background image, replace this clear with blit'ing the
    # background image.
    all_sprites.update()
    screen.blit(background)


    # --- Drawing code should go here
    all_sprites.draw(screen)
    # --- Go ahead and update the screen with what we've drawn.
    pygame.display.update()

    # --- Limit to 60 frames per second
    clock.tick(60)

# Close the window and quit.
pygame.quit()
